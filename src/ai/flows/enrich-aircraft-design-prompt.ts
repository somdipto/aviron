// enrich-aircraft-design-prompt.ts
'use server';

/**
 * @fileOverview This file defines a Genkit flow for enriching aircraft design prompts with relevant details based on deep research.
 *
 * - enrichAircraftDesignPrompt - A function that enriches the user's aircraft design prompt.
 * - EnrichAircraftDesignPromptInput - The input type for the enrichAircraftDesignPrompt function.
 * - EnrichAircraftDesignPromptOutput - The return type for the enrichAircraftDesignPrompt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const EnrichAircraftDesignPromptInputSchema = z.object({
  userPrompt: z.string().describe('The user-provided aircraft design prompt.'),
  deepResearch: z.boolean().optional().default(false).describe('Whether to conduct deep research to enrich the prompt.'),
});
export type EnrichAircraftDesignPromptInput = z.infer<typeof EnrichAircraftDesignPromptInputSchema>;

const EnrichAircraftDesignPromptOutputSchema = z.object({
  enrichedPrompt: z.string().describe('The enriched aircraft design prompt with relevant details.'),
});
export type EnrichAircraftDesignPromptOutput = z.infer<typeof EnrichAircraftDesignPromptOutputSchema>;

export async function enrichAircraftDesignPrompt(input: EnrichAircraftDesignPromptInput): Promise<EnrichAircraftDesignPromptOutput> {
  return enrichAircraftDesignPromptFlow(input);
}

const prompt = ai.definePrompt({
  name: 'enrichAircraftDesignPromptPrompt',
  input: {schema: EnrichAircraftDesignPromptInputSchema},
  output: {schema: EnrichAircraftDesignPromptOutputSchema},
  prompt: `You are an expert aircraft design assistant. Your task is to enrich the user's aircraft design prompt with relevant details based on deep research, if requested.

  User Prompt: {{{userPrompt}}}

  Enriched Prompt:`, // The actual prompt will be generated by the LLM
});

const enrichAircraftDesignPromptFlow = ai.defineFlow(
  {
    name: 'enrichAircraftDesignPromptFlow',
    inputSchema: EnrichAircraftDesignPromptInputSchema,
    outputSchema: EnrichAircraftDesignPromptOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
